// You need to play around with the provided string (s).

// Move consonants forward 9 places through the alphabet. If they pass 'z', start again at 'a'.

// Move vowels back 5 places through the alphabet. If they pass 'a', start again at 'z'. 
//For our Polish friends this kata does not count 'y' as a vowel.

// Exceptions:

// If the character is 'c' or 'o', move it back 1 place. For 'd' move it back 3, and for 'e', move it back 4.

// If a moved letter becomes 'c', 'o', 'd' or 'e', revert it back to it's original value.

// Provided string will always be lower case, won't be empty and will have no special characters.



function stringsBack(string){
	var vowels ='AEIOU', alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',  str = string.toUpperCase().split('');

	for (var i = 0; i < str.length; i++) {

		let newIndex = alphabet.indexOf(str[i])


			if (str[i] === 'A'|| str[i] ==='E' || str[i] ==='I' || str[i] ==='O' || str[i] ==='U'){

				if(str[i] === 'O' || str[i] === 'E'){
					if (str[i] === 'O'){str[i] = [alphabet.indexOf(str[i]) - 1]}
					if (str[i] === 'E'){str[i] = [alphabet.indexOf(str[i]) - 4]}
				} else {
					newIndex -=5
					str[i] = alphabet[newIndex % 26]
				}
 			} else {

 				if (str[i] === 'C'){str[i] = [alphabet.indexOf(str[i]) - 1]}
				if (str[i] === 'D'){str[i] = [alphabet.indexOf(str[i]) - 3]}

 				newIndex += 9;
				str[i] = alphabet[newIndex % 26]
			}

	}
	return str.join('')
}





